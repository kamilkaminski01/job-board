# This docker-compose file is designed for development purposes only

version: '3.8'

services:
  web:
    build:
      context: backend
      dockerfile: local.Dockerfile
    depends_on:
        db:
          condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .envs/.django
      - .envs/.postgres
    command: sh -c "python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"

  db:
    restart: always
    image: postgres:15.3-alpine
    env_file:
      - .envs/.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
        test: sh -c "pg_isready -U postgres"
        interval: 3s
        timeout: 3s
        retries: 5

  frontend:
    build:
      context: frontend
      dockerfile: local.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  redis:
    image: redis:7.0.2-alpine
    ports:
      - "6379:6379"

  worker:
    build:
      context: backend
      dockerfile: local.Dockerfile
    command: python manage.py rqworker default --with-scheduler
    volumes:
      - ./backend:/app
    env_file:
      - .envs/.django
      - .envs/.postgres
    depends_on:
      - redis

  worker-dashboard:
    build:
      context: backend
      dockerfile: dashboard.Dockerfile
    ports:
      - "9181:9181"
    depends_on:
      - worker
      - redis
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379


volumes:
  postgres_data:
